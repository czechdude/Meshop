@model PagedList.IPagedList<Meshop.Framework.Model.BasicProduct>

@{
    ViewBag.Title = "Products";
}

<h2>Products</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm())
{ 
   <p>
   Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string) &nbsp;
   <input type="submit" value="Search" />
   </p>
}

<table>
    <tr>
        
        <th>
           @Html.ActionLink("Name", "Index", new { sortOrder=ViewBag.NameSortParm,currentFilter=ViewBag.CurrentFilter })
        </th>
        <th>
            Price
        </th>
        <th>Categories</th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @foreach(var category in item.Categories){
            @Html.DisplayFor(modelItem2 => category.Name)@:,
            }
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new {  id=item.ProductID }) |
            @Html.ActionLink("Details", "Details", new { id = item.ProductID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.ProductID })
        </td>
    </tr>
}

</table>
<div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount
    &nbsp;
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw("&nbsp;");
        @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:<<
        @Html.Raw("&nbsp;");
        @:< Prev
    }
    &nbsp;
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw("&nbsp;");
        @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:Next >
        @Html.Raw("&nbsp;")
        @:>>
    }
</div>